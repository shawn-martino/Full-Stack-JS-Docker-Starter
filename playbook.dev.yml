---
- hosts: localhost
  tasks:
    # ==============================
    # Postgres Official Docker Image
    # ==============================

    # TODO
    # - Add data persistence

    - name: Run Postgres container
      docker_container:
        name: 'postgres'
        recreate: true
        restart_policy: unless-stopped
        image: 'postgres:latest'
        state: started

    # ===========================
    # Backend Custom Docker Image
    # ===========================

    # TODO
    # - Add env vars to ansible vault

    - name: Build Backend image
      command: docker build -f Dockerfile.dev -t backend_image .
      args:
        chdir: backend/

    - name: Running the Backend container
      docker_container:
        name: backend
        image: 'backend_image:latest'
        state: started
        volumes:
          - '/app/node_modules'
          - './backend:/app'
        env:
          REDIS_HOST: 'redis'
          REDIS_PORT: '6379'
          PGUSER: 'postgres'
          PGHOST: 'postgres'
          PGDATABASE: 'postgres'
          PGPASSWORD: 'postgres_password'
          PGPORT: '5432'
        links:
          - 'postgres:postgres'

    # ============================
    # Frontend Custom Docker Image
    # ============================

    - name: Build Frontend image
      command: docker build -f Dockerfile.dev -t frontend_image .
      args:
        chdir: frontend/

    - name: Running the Frontend container
      docker_container:
        name: frontend
        image: 'frontend_image:latest'
        state: started
        volumes:
          - /app/node_modules
          - ./frontend:/app

    # ===========================
    # NGINX Official Docker Image
    # ===========================

    # TODO
    # - Add local domain name (eg. example.local)
    # - Add local SSL for dev

    - name: Run Nginx container
      docker_container:
        name: 'nginx'
        recreate: true
        restart_policy: always
        image: 'nginx:latest'
        state: started
        published_ports:
          - '3050:80'
        volumes:
          - './nginx/dev/dev.default.conf:/etc/nginx/conf.d/default.conf'
        links:
          - 'frontend:frontend'
          - 'backend:backend'
